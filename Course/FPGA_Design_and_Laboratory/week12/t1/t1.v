
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module t1(

	//////////// CLOCK //////////
	CLOCK_50,
	CLOCK2_50,
	CLOCK3_50,

	//////////// LED //////////
	LEDG,
	LEDR,

	//////////// KEY //////////
	KEY,

	//////////// SW //////////
	SW,

	//////////// SEG7 //////////
	HEX0,
	HEX1,
	HEX2,
	HEX3,
	HEX4,
	HEX5,
	HEX6,
	HEX7 
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		CLOCK_50;
input 		          		CLOCK2_50;
input 		          		CLOCK3_50;

//////////// LED //////////
output		     [8:0]		LEDG;
output		    [17:0]		LEDR;

//////////// KEY //////////
input 		     [3:0]		KEY;

//////////// SW //////////
input 		    [17:0]		SW;

//////////// SEG7 //////////
output		     [6:0]		HEX0;
output		     [6:0]		HEX1;
output		     [6:0]		HEX2;
output		     [6:0]		HEX3;
output		     [6:0]		HEX4;
output		     [6:0]		HEX5;
output		     [6:0]		HEX6;
output		     [6:0]		HEX7;


//=======================================================
//  REG/WIRE declarations
//=======================================================

wire			draw_square, draw_circle, draw_cross;

reg	[19:0] num_right, num_left;	// calculate the number of red dots and green dots;
reg	obutton_right, obutton_left;	// assign button



//=======================================================
//  Structural coding
//=======================================================

assign	draw_square = ((x_cnt>100) && (x_cnt<150) && (y_cnt>100) && (y_cnt<150) )	? 1'b1 : 1'b0;
					
assign	draw_cross = ((x_cnt>600 && x_cnt<700 && y_cnt>150 && y_cnt<450) || (x_cnt>500 && x_cnt<800 && y_cnt>250 && y_cnt<350)) ? 1'b1 : 1'b0;	

assign	draw_circle = (x_cnt-150)*(x_cnt-150)+(y_cnt-240)*(y_cnt-240)<10000 ? 1'b1 : 1'b0;


// 
always@(posedge iCLK or negedge iRST_n)
begin
	if (!iRST_n)
		begin
			oHD	<= 1'd0;
			oVD	<= 1'd0;
			oDEN <= 1'd0;
			oLCD_R <= 8'd0;
			oLCD_G <= 8'd0;
			oLCD_B <= 8'd0;
		end
	else
		begin
			oHD	<= mhd;
			oVD	<= mvd;
			oDEN <= mden;
/*
			oLCD_R <= obutton_right  && draw_circle  ? 8'hFF   :read_red; ////畫圓
			oLCD_G <= obutton_left && draw_cross ? 8'hFF :read_green; //畫十字
			oLCD_B <= read_blue;
*/



			oLCD_R <= obutton_right  && draw_circle  ? 8'hFF   :read_red; ////畫圓
			oLCD_G <= obutton_left && draw_cross ? 8'hFF :read_green; //畫十字
			oLCD_B <= read_blue;
		end		
end


endmodule
