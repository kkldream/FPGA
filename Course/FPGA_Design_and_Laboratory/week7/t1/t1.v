
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module t1(

	//////////// CLOCK //////////
	CLOCK_50,
	CLOCK2_50,
	CLOCK3_50,

	//////////// LED //////////
	LEDG,
	LEDR,

	//////////// KEY //////////
	KEY,

	//////////// SW //////////
	SW,

	//////////// SEG7 //////////
	HEX0,
	HEX1,
	HEX2,
	HEX3,
	HEX4,
	HEX5,
	HEX6,
	HEX7,

	//////////// GPIO, GPIO connect to GPIO Default //////////
	GPIO 
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		CLOCK_50;
input 		          		CLOCK2_50;
input 		          		CLOCK3_50;

//////////// LED //////////
output		     [8:0]		LEDG;
output		    [17:0]		LEDR;

//////////// KEY //////////
input 		     [3:0]		KEY;

//////////// SW //////////
input 		    [17:0]		SW;

//////////// SEG7 //////////
output		     [6:0]		HEX0;
output		     [6:0]		HEX1;
output		     [6:0]		HEX2;
output		     [6:0]		HEX3;
output		     [6:0]		HEX4;
output		     [6:0]		HEX5;
output		     [6:0]		HEX6;
output		     [6:0]		HEX7;

//////////// GPIO, GPIO connect to GPIO Default //////////
inout 		    [35:0]		GPIO;

//=======================================================
//  REG/WIRE declarations
//=======================================================
wire 	clock_1MHz, clock_100ms, clock_10ms, clock_1s;  // clock signal
wire [7:0] t_hour, t_min, t_sec, key_count;

//=======================================================
//  Structural coding
//=======================================================
clock_all uc (				// 產生不同頻率的時脈訊號
	  .clk(CLOCK_50), 
	  .clock_1MHz(clock_1MHz),
	  .clock_100ms(clock_100ms),
	  .clock_10ms(clock_10ms),
	  .clock_1s(clock_1s)
);

clock_timer utimer (		// 以BCD輸出 按鈕次數,時,分,秒 
		.iclk(CLOCK_50), 
		.iclk_sec(clock_1s),
		.ikey(KEY), 
		.okey_count(key_count),
		.ohour(t_hour),
		.omin(t_min),
		.osec(t_sec)
);


SEG7_LUT_8 useg(			// 8個獨立位元，16進制輸入，七段顯示器輸出
		.iDIG({key_count, t_hour, t_min, t_sec}),
		.oSEG0(HEX0),
		.oSEG1(HEX1),
		.oSEG2(HEX2),
		.oSEG3(HEX3),
		.oSEG4(HEX4),
		.oSEG5(HEX5),
		.oSEG6(HEX6),
		.oSEG7(HEX7)
);

assign LEDR[8] = clock_1s;
assign LEDR[7] = clock_100ms;

//assign GPIO[0:3] = {CLOCK_50, clock_1MHz, clock_100ms, clock_1s};
assign GPIO[0] = CLOCK_50;
assign GPIO[1] = clock_1MHz;
assign GPIO[2] = clock_100ms;
assign GPIO[3] = clock_1s;


endmodule
